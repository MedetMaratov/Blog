<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BlogEngine.Web</name>
    </assembly>
    <members>
        <member name="M:BlogEngine.Web.Controllers.BlogController.GetAll">
            <summary>
            Gets the list of blogs
            </summary>
            <remarks>
            Sample request:
            Get /api/blog/getall
            </remarks>
            <returns>Returns BlogListVM</returns>
            <response code="200">Success</response>
        </member>
        <member name="M:BlogEngine.Web.Controllers.BlogController.GetByName(System.String)">
            <summary>
            Gets the blog by name
            </summary>
            <remarks>
            Sample request:
            Get /api/blog/getbyname/food_rescipes
            </remarks>
            <param name="blogName">Blog name (string)</param>
            <returns>Returns BlogListVM</returns>
            <response code="200">Success</response>
        </member>
        <member name="M:BlogEngine.Web.Controllers.BlogController.GetSubscribed">
            <summary>
            Gets the list of blogs subscribed to by the current user.
            </summary>
            <remarks>
            Sample request:
            Get /api/blog/getsubscribed
            </remarks>
            <returns>Returns BlogListVM</returns>
            <response code="200">Success</response>
        </member>
        <member name="M:BlogEngine.Web.Controllers.BlogController.GetByCreator(System.Guid)">
            <summary>
            Gets the list of blogs created by a specific user.
            </summary>
            <remarks>
            Sample request:
            Get /api/blog/getbycreator/2cb58782-9e80-41ce-b2d5-e9e5a4f0950e
            </remarks>
            <param name="CreatorId">Blog creator id (guid)</param>
            <returns>Returns BlogListVM</returns>
            <response code="200">Success</response>
        </member>
        <member name="M:BlogEngine.Web.Controllers.BlogController.GetByCategory(BlogEngine.Web.Models.GetBlogByCategoryDto)">
            <summary>
            Returns a list of blogs with the included and excluded categories
            </summary>
            <remarks>
            Sample request:
            Get /api/blog/getbycategory
            {
                "IncludedCategories": "category1;cateory2"
                "ExcludedCategories": ""
            }
            </remarks>
            <param name="categoriesDto">categoriesDto object</param>
            <returns>Returns BlogListVM</returns>
            <response code="200">Success</response>
        </member>
        <member name="M:BlogEngine.Web.Controllers.BlogController.GetDetails(System.Guid)">
            <summary>
            Gets the details of a specific blog.
            </summary>
            <remarks>
            Sample request:
            Get /api/blog/getdetails
            </remarks>
            <param name="id">Specific blog id (guid)</param>
            <returns>Returns Blog</returns>
            <response code="200">Success</response>
        </member>
        <member name="M:BlogEngine.Web.Controllers.BlogController.Create(BlogEngine.Web.Models.CreateBlogDto)">
            <summary>
            Creates a new blog.
            </summary>
            <remarks>
            Sample request:
            Post /api/blog/create
            {
                "Title": "Blog Title",
                "Description": "Blog description",
                "Image": "https://image.jpg",
                "Categories": [
                "b79df8b2-183e-4a32-98cd-3fc47e65f07a",
                "cda8b3f6-5d43-4f9d-88bc-e49e9144e628"
                ]
            }
            </remarks>
            <param name="createBlogDto">CreateBlogDto object.</param>
            <returns>Returns id (guid)</returns>
            <response code="201">Success</response>
        </member>
        <member name="M:BlogEngine.Web.Controllers.BlogController.Update(BlogEngine.Web.Models.EditBlogDto)">
            <summary>
            Edits the specified blog
            </summary>
            <remarks>
            Sample request:
            Put /api/blog/update
            {
            "UserId": "a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6",
            "BlogId": "b2c3d4e5-f6g7-h8i9-j0k1-l2m3n4o5p6q",
            "Title": "Blog Title",
            "Description": "blog description.",
            "Image": "https://sample-image.jpg",
            "Categories": [
              {
                "Id": "c3d4e5f6-g7h8-i9j0-k1l2-m3n4o5p6q7r",
                "Name": "Category 1",
              }
             ]
            }
            </remarks>
            <param name="editeBlogDto">EditeBlogDto object.</param>
            <returns>Returns NoContent</returns>
            <response code="204">Success</response>
        </member>
        <member name="M:BlogEngine.Web.Controllers.BlogController.Delete(System.Guid)">
            <summary>
            Deletes the blog by id
            </summary>
            <remarks>
            Sample request:
            Delete /api/blog/delete/88DEB432-062F-43DE-8DCD-8B6EF79073D3
            </remarks>
            <param name="id">Blog id (guid)</param>
            <returns>Returns NoContent</returns>
            <response code="204">Success</response>
        </member>
        <member name="M:BlogEngine.Web.Controllers.CategoryController.Create(BlogEngine.Web.Models.CreateCategoryDto)">
            <summary>
            Creates a new category.
            </summary>
            <remarks>
            Sample request:
            Post /api/category/create
            {
                "Name": "category name"
            }
            </remarks>
            <param name="createCategoryDto">CreateCategoryDto object.</param>
            <returns>Returns id (guid)</returns>
            <response code="201">Success</response>
        </member>
        <member name="M:BlogEngine.Web.Controllers.CategoryController.Get">
            <summary>
            Gets the list of all categories
            </summary>
            <remarks>
            Sample request:
            Get /api/category/get
            </remarks>
            <returns>List of category</returns>
            <response code="200">Success</response>
        </member>
        <member name="M:BlogEngine.Web.Controllers.CommentController.Create(System.Guid,BlogEngine.Web.Models.CreateCommentDto)">
            <summary>
            Creates a new comment for a specific post.
            </summary>
            <remarks>
            Sample request:
            Post /api/comment/create
            {
                "Content": "text"
            }
            </remarks>
            <param name="postId">The ID of the post.</param>
            <param name="createCommentDto">The data for creating the comment.</param>
            <returns>Returns id (guid)</returns>
            <response code="201">Success</response>
        </member>
        <member name="M:BlogEngine.Web.Controllers.CommentController.Delete(System.Guid,System.Guid)">
            <summary>
            Deletes a comment from a specific post.
            </summary>
            <remarks>
            Sample request:
            Delete /api/comment/delete/d7989641-fd26-4a88-a08f-55d639b7003f/a7a921e7-9fc1-4d1b-9ad0-b965fbaebb70
            </remarks>
            <param name="postId">The ID of the post.</param>
            <param name="commentId">The ID of the comment to delete.</param>
            <returns>Returns NoContent if successful.</returns>
            <response code="204">Success</response>
        </member>
        <member name="M:BlogEngine.Web.Controllers.CommentController.GetAll(System.Guid)">
            <summary>
            Gets all comments for a specific post.
            </summary>
            <remarks>
            Sample request:
            Get /api/comment/getall
            </remarks>
            <param name="postId">The ID of the post.</param>
            <returns>Returns CommentsListVm.</returns>
            <response code="200">Success</response>
        </member>
        <member name="M:BlogEngine.Web.Controllers.PostController.Get(System.Guid)">
            <summary>
            Gets the details of a specific post.
            </summary>
            <remarks>
            Sample request:
            Get /api/post/get/b79df8b2-183e-4a32-98cd-3fc47e65f07a
            </remarks>
            <param name="id">Specific post id (guid)</param>
            <returns>Returns PostLookUpDto</returns>
            <response code="200">Success</response>
        </member>
        <member name="M:BlogEngine.Web.Controllers.PostController.GetAllByBlogId(System.Guid)">
            <summary>
            Gets all posts associated with a specific blog.
            </summary>
            <remarks>
            Sample request:
            Get /api/post/getallbyblogid/b79df8b2-183e-4a32-98cd-3fc47e65f07a
            </remarks>
            <param name="blogId">The ID of the blog.</param>
            <returns>Returns PostListVM</returns>
            <response code="200">Success</response>
        </member>
        <member name="M:BlogEngine.Web.Controllers.PostController.GetSubscribed">
            <summary>
            Gets all posts from blogs subscribed to by the current user.
            </summary>
            <remarks>
            Sample request:
            Get /api/post/getsubscribed
            </remarks>
            <param name="blogId">The ID of the blog.</param>
            <returns>Returns PostListVM</returns>
            <response code="200">Success</response>
        </member>
        <member name="M:BlogEngine.Web.Controllers.PostController.GetByTags(BlogEngine.Web.Models.GetPostsByTagsDto)">
            <summary>
            Gets posts by specified tags.
            </summary>
            <remarks>
            Sample request:
            Get /api/post/getbytags
            {
                "IncludedTags": "tag1;tag2"
                "ExcludedTags": "tag3"
            }
            </remarks>
            <param name="tagsDto">The tags to include/exclude.</param>
            <returns>Returns PostListVM</returns>
            <response code="200">Success</response>
        </member>
        <member name="M:BlogEngine.Web.Controllers.PostController.Create(System.Guid,BlogEngine.Web.Models.CreatePostDto)">
            <summary>
            Creates a new post for a specific blog.
            </summary>
            <remarks>
            Sample request:
            Post /api/post/create
            {
                "Title": "Post title",
                "Content": "Post content",
                "Tags": [ "tag1;tag2"]
            }
            </remarks>
            <param name="blogId">The ID of the blog.</param>
            <param name="createPostDto">The data for creating the post.</param>
            <returns>Returns id (guid)</returns>
            <response code="201">Success</response>
        </member>
        <member name="M:BlogEngine.Web.Controllers.PostController.Edit(System.Guid,BlogEngine.Web.Models.EditPostDto)">
            <summary>
            Edits the specified post.
            </summary>
            <remarks>
            Sample request:
            Put /api/post/edit
            {
                "Title": "Post title",
                "Content": "Post content",
                "Tags": [ "tag1;tag2"]
            }
            </remarks>
            <param name="postID">The ID of the post.</param>
            <param name="editPostDto">The data for updating the post.</param>
            <returns>Returns NoContent if successful.</returns>
            <response code="204">Success</response>
        </member>
        <member name="M:BlogEngine.Web.Controllers.PostController.Delete(System.Guid,System.Guid)">
            <summary>
            Deletes a post from a specific blog.
            </summary>
            <remarks>
            Sample request:
            Delete /api/post/delete/c3d4e5f6-g7h8-i9j0-k1l2-m3n4o5p6q7r/a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6
            </remarks>
            <param name="blogId">The ID of the blog.</param>
            <param name="postId">The ID of the post to delete.</param>
            <returns>Returns NoContent if successful.</returns>
            <response code="204">Success</response>
        </member>
        <member name="M:BlogEngine.Web.Controllers.SubscriptionController.Subscribe(System.Guid)">
            <summary>
            Subscribes the current user to a blog.
            </summary>
            <remarks>
            Sample request:
            Post /api/subscription/subscribe
            {
                "UserId":"b79df8b2-183e-4a32-98cd-3fc47e65f07a",
                "BlogId: "cda8b3f6-5d43-4f9d-88bc-e49e9144e628"
            }
            </remarks>
            <param name="blogId">The ID of the blog to subscribe to</param>
            <returns>Returns id (guid)</returns>
            <response code="200">Success</response>
        </member>
        <member name="M:BlogEngine.Web.Controllers.SubscriptionController.Unsubscribe(System.Guid)">
            <summary>
            Unsubscribes the current user from a blog.
            </summary>
            <remarks>
            Sample request:
            Post /api/subscription/unsubscribe
            {
                "UserId":"b79df8b2-183e-4a32-98cd-3fc47e65f07a",
                "BlogId: "cda8b3f6-5d43-4f9d-88bc-e49e9144e628"
            }
            </remarks>
            <param name="blogId">The ID of the blog to unsubscribe from.</param>
            <returns>Returns NoContent if successful.</returns>
            <response code="204">Success</response>
        </member>
    </members>
</doc>
